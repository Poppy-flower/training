1.缓存Ajax
    Ajax缓存和http缓存效果相同。
    Ajax页面缓存是ajax处理数据时对一些重复相同数据进行一个缓存操作，这种设计使客户端对一些静态页面内容的请求，比如图片，css文件，js脚本等，变得更加快捷，提高了页面的响应速度，也节省了网络通信资源。
2.以下HTTP响应头是可以用来做Ajax缓存的
   （1）Expires：应该被应用在你知道页面被何时修改的情况下。例如，如果是股票价格，您可能会设置一个在十秒后过期的数值。对于照片，您可能设置一个更长时间的Expires头，因为你指望它永远不改变。Expires头允许浏览器在一段时间内可以重复使用缓存内容，并避免任何不需要的同服务器的交互过程。
   （2）Last—Modified：设置这个标记会通知浏览器可以使用If—Modified—Since头来产生一个条件GET请求以便检查其本地缓存。如果数据不需要更新，服务器将使用HTTP304 状态码来响应此请求。
   （3）Cache—Control：如果允许，这应该被设置为"public"，使其他用户可以在中间代理和缓存服务器上存储和共享数据，在Firefox上，这还将启动针对HTTPS的缓存。
3.有时候，如果通过Ajax对一些后台数据进行更改的时候，虽然数据在后台已经发生改变，但是页面缓存中并没有改变，对于相同的URL，Ajax提交过去以后，浏览器还只是简单地从缓存中拿数据。
  解决Ajax缓存问题：
    （1）URL参数添加参数或时间戳。（会在客户端产生大量缓存文件）
    （2）修改文件最后更改时间：setRequestHeader（"If-Modified-Since"，"0"）；
        这致使服务器上文件的最后修改时间与其不同因此不会访问缓存文件，而是重新访问服务器。
        （只在客户端产生一个缓存文件）
    （3）禁用缓存（和文章的使用Ajax缓存有点矛盾）
        1=>客户端设置：在ajax发送请求前加上
            xmlHttpRequest.setRequestHeader("Cache-Control","no-cache");
        2=>服务器端设置：在服务端加上header（"Cache-Control：no-cache,must-revalidate"）;