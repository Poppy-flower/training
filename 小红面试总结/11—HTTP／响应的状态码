1.在浏览器的地址栏输入一个地址，按下回车，发生了什么？
    （1）浏览器会发送一个GET请求，请求会转发到DNS服务器，进行域名解析，然后再转发到相应的解析成的IP地址对应的服务器；
    （2）在服务器端，服务器接收请求，并进行相应的处理，将相应的结果给客户端浏览器；
    （3）浏览器接受响应的结果，并进行响应的语法检查，有错误，则会报错；如果没有错误就进行渲染；
    （4）浏览器渲染的时候，先生成DOM树，再根据JS和CSS规则生成渲染树，渲染树中的结构比DOM树少，因为很多东西如果隐藏的话，就不会出现在渲染树中了，最后渲染在页面上。

2.请求头（客户端发送请求的时候，需要带的头信息）
    （1）Accept
    （2）Accept-Encoding
    （3）Accept-Language
    （4）Host
    （5）Referer
    （6）User-Agent
    （7）Cache-Control
    （8）Cookie
    （9）If-Motified-Since
    （10）If-None-Metch
3.响应头（服务器端响应客户端，需要带的头信息）
    （1）Location
    （2）Server
    （3）Content-Encoding
    （4）Content-Length
    （5）Content-Language
    （6）Content-Type
    （7）Refresh
    （8）Content-Disposition
    （9）Transfer-Encoding
    (10)Expires
    (11)Cache-Control
    (12)Pragma
4.HTTP缓存
    （1）Expires策略
    （2）Cache-Control策略（重点关注）
    （3）Last-Modified/If-Modified-Since
    （4）Etag/If-None-Metch
5.HTTP2.0和HTTP1.0的区别？
     (1)数据压缩
         HTTP1.1不支持header数据压缩，HTTP2.0使用HPACK算法对header的数据进行压缩，这样数据体积小了，在网络上传输就会更快；
     (2)多路复用
         HTTP2.0使用了多路复用技术，做到同一个连接并发处理多个请求，而且并发请求的数量比HTTP1.0大了好几个数量级。
6-1.知道HTTPs吗？简要说一下？
     HTTPS：
     （1）S的含义：SSL证书
     （2）连接建立的过程：
          1）客户端发送请求到服务器端
          2）服务器端返回证书和公开密钥，公开密钥作为证书的一部分存在；
          3）客户端验证证书和公开密钥的有效性，如果有效，则生成共享密钥并使用公开密钥加密发送到服务器端
          4）服务器使用私有密钥解密数据，并使用收到的共享密钥加密数据，发送到客户端；
          5）客户端使用共享密钥解密数据
          6）SSL加密建立
6-2.HTTPS和HTTP的区别？
     （1）https协议需要到CA申请证书，一般免费证书很少，需要交费；
     （2）https是超文本传输协议，信息是明文传输；https则是具有安全性的SSL加密传输协议；
     （3）http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443；
     （4）http的连接很简单，是无状态的；https协议是由SSL+HTTP协议构建的可进行加密传输身份认证的网络协议，比HTTP协议安全。
7.客户端向服务器端发送请求，返回的浏览器状态码有哪些？
    （1）200：服务器成功返回；
    （2）301：永久重定向，抓取新内容的同时也将旧的网址替换为重定向之后的网址；
    （3）302：暂时重定向，抓取新的内容而保留旧的网址；
    （4）304：缓存（服务器告诉客户，原来缓冲的文档还可以继续使用）；
    （5）401：被请求的页面需要用户名和密码；
    （6）403：服务器拒绝访问；
    （7）404：资源找不到；
    （8）500：服务器错误；
    （9）502：请求未完成，服务器从上游服务器收到一个无效的响应；
    （10）503：请求未完成，服务器临时过载或进行停机维护；
8.Websocket,你能介绍一下吗？
     Websocket,是基于TCP／IP协议的双向的、全双工的数据连接；双向的：客户端、服务器端；全双工的：数据的发送与接收，两者同步进行；
9.计算机网络的基本知识
    （1）TCP三次握手（连接建立的过程）：
           客户端向服务器端发送一个SYN包，请求建立连接；
           服务器收到SYN包之后，会发送一个SYN／ACK确认包回去，表示对第一个SYN包的确认；
           客户端收到SYN／ACK包以后，会发送一个ACK确认包，通知服务器端连接已建立。
    （2）TCP四次挥手（关闭连接）：
           客户端向服务器端发送FIN报文，请求关闭连接；
           客户端发送ACK，表示收到请求。但是服务器端还有数据没有发送完成，则不必着急关闭Socket，可以继续发送数据。这时客户端进入FIN_WAIT状态，等待服务器端的FIN报文；
           当服务器端确定数据已经发送完成，则向客户端发送FIN报文，表明可以关闭连接了；
           客户端收到FIN报文后，就知道可以关闭连接了，再发送ACK，后进入TIME_WAIT状态，客户端等待了2MSL（最大报文生成时间）后依然没有收到回复，则证明服务器端已正常关闭，然后客户端也可以关闭连接了，进入CLOSED状态。服务器端收到ACK后，就关闭连接了，如果服务器端没有收到ACK，那么将重发FIN。


