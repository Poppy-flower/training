1.简单介绍一下JS的闭包？
    （1）闭包是指外部函数里声明内部函数，内部函数引用外部函数里的局部变量，这样当外部函数调用完毕以后，局部变量不被释放，可以一直使用。
    具体应用：在一个ul里有多个li，单击li的时候显示自己的索引，实现方式是，在for循环给li绑定事件时，在for循环里添加函数立即调用，为这个函数立即调用传递i做为实参，定义index为形参。
    然后在这个函数立即调用里给li注册单击事件，在单击事件里alert函数立即调用中的形参index
     <ul id="ul1">
     	<li>item 1</li>
     	<li>item 2</li>
     	<li>item 3</li>
     </ul>
     <script>
     	var oUl = document.getElementById('ul1');
     	var aLi = oUl.getElementsByTagName('li');
     	for(var i=0; i<aLi.length; i++){
     		(function(index){
     			aLi[i].onclick = function(){
     				alert(index);
     			};
     		})(i);
     	}
     </script>
2.JS的闭包一般在什么场合下使用？
     （1）保护变量，用自运行的匿名函数来实现；
     （2）协调异步代码；自运行的匿名函数来实现，并且传参进去（异步代码需要用到原来的变量，通过作为函数的参数传进去）；
     （3）避免全局变量的污染
     （4）私有成员的存在
3.简单说一下闭包的优点和缺点？
     （1）闭包的优点：
           首先，可以读取函数内部的变量；
           其次，可以让这些变量的值始终不变，保存在内存中；
     （2）闭包的缺点：
           因为闭包会导致函数的变量都会保存在内存中，所以它会导致内存的消耗很大；
           所以闭包不能滥用，否则会导致网页的性能问题，在IE中还可能会导致内存泄漏。

     （Q2）针对闭包的缺点，有什么解决办法吗？
          解决办法是有的，可以在退出函数之前，将不用的局部变量全部删除；在IE中，闭包使用完成之后，将导致引用常驻于内存中而不被释放，这个需要我们手动删除。

